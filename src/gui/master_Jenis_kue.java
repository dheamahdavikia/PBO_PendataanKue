/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import entitas.*;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import method.*;
/**
 *
 * @author User
 */
public class master_Jenis_kue extends javax.swing.JFrame {
   private DefaultTableModel model;
    List<Emtitas_Jenis_Kue> listKls = new ArrayList<>();
    Emtitas_Jenis_Kue ek = new Emtitas_Jenis_Kue();
    Jenis_Method km;
    Connection con = null;
    Statement st = null;
    ResultSet rs = null;
    String sql = null;
    /**
     * Creates new form master_kelas
     */
    public master_Jenis_kue() throws Exception {
        this.km = new Jenis_Method();
        initComponents();
        try {         
            st = koneksi.getKoneksi().createStatement();
        } catch (SQLException ex) {
            
        }
            Bersih();
        SiapIsi(false);
        BuatTabel();
        tampil();
        buatkode();
        setLocationRelativeTo(this);
        tombolAwal();
        idjenis.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        idjenis = new javax.swing.JTextField();
        namajenis = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btntambah = new javax.swing.JButton();
        btnsimpan = new javax.swing.JButton();
        btnedit = new javax.swing.JButton();
        btnhapus = new javax.swing.JButton();
        btnkeluar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabeljenis = new javax.swing.JTable();
        Cari = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        jLabel1.setText("Kode Jenis");

        jLabel2.setText("Nama Jenis Kue");

        btntambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/tambah.png"))); // NOI18N
        btntambah.setText("Tambah");
        btntambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntambahActionPerformed(evt);
            }
        });

        btnsimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/simpan.png"))); // NOI18N
        btnsimpan.setText("Simpan");
        btnsimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsimpanActionPerformed(evt);
            }
        });

        btnedit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/edit.png"))); // NOI18N
        btnedit.setText("Edit");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });

        btnhapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/hapus.png"))); // NOI18N
        btnhapus.setText("Hapus");
        btnhapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhapusActionPerformed(evt);
            }
        });

        btnkeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/tutup.png"))); // NOI18N
        btnkeluar.setText("Keluar");
        btnkeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnkeluarActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(2, 2, 2)
                .add(btntambah)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnsimpan)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnedit, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnhapus)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(btnkeluar)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btntambah)
                    .add(btnsimpan)
                    .add(btnedit)
                    .add(btnhapus)
                    .add(btnkeluar))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabeljenis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabeljenis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabeljenisMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabeljenis);

        Cari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CariKeyReleased(evt);
            }
        });

        jLabel6.setText("Cari");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel10.setText("Data Jenis Kue");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(15, 15, 15)
                .add(jLabel6)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(layout.createSequentialGroup()
                            .add(jLabel1)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(idjenis, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 122, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(layout.createSequentialGroup()
                            .add(jLabel2)
                            .add(18, 18, 18)
                            .add(namajenis, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 122, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(Cari))
                .add(28, 28, 28))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(0, 0, Short.MAX_VALUE)
                .add(jLabel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 503, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 23, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(idjenis, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(namajenis, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(27, 27, 27)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(Cari, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 176, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btntambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntambahActionPerformed
        // TODO add your handling code here:
        if(btntambah.getText().equalsIgnoreCase("tambah")){
            btntambah.setText("Batal");
            Bersih();
            SiapIsi(true);
            idjenis.requestFocus();
            btntambah.setEnabled(true);
            btnsimpan.setEnabled(true);
            btnhapus.setEnabled(false);
            btnedit.setEnabled(false);
            btnkeluar.setEnabled(false);
            Cari.setEnabled(false);
            buatkode();
        }else{
            btntambah.setText("Tambah");
            Bersih();
            buatkode();
            SiapIsi(false);
            tombolAwal();
            Cari.setEnabled(true);
        }
    }//GEN-LAST:event_btntambahActionPerformed

    private void btnsimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsimpanActionPerformed
        // TODO add your handling code here:
        if(idjenis.getText().isEmpty() || namajenis.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Silahkan Lengkapi Data !!");
        }else{
            ek.setId_jenis(idjenis.getText());
            ek.setNama_jenis(namajenis.getText());

            if(btntambah.getText().equalsIgnoreCase("batal")){
                if(km.tambah(ek)==1){
                    JOptionPane.showMessageDialog(null, "Simpan Data Berhasil");
                }else{
                    JOptionPane.showMessageDialog(null, "Simpan Data Gagal !!");
                }
                tampil();
            }

            if(btnedit.getText().equalsIgnoreCase("batal")){
                if(km.edit(ek)==1){
                    JOptionPane.showMessageDialog(null, "Edit Data Berhasil");
                }else{
                    JOptionPane.showMessageDialog(null, "Edit Data Gagal !!");
                }
                tampil();
            }

            Bersih();
            SiapIsi(false);
            btntambah.setText("Tambah");
            btnedit.setText("Edit");
            tombolAwal();
            Cari.setEnabled(true);
            buatkode();
        }
    }//GEN-LAST:event_btnsimpanActionPerformed

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        // TODO add your handling code here:
     ek.setId_jenis(idjenis.getText());

        if(btnedit.getText().equalsIgnoreCase("edit")){
            btnedit.setText("Batal");
            SiapIsi(true);
            idjenis.setEnabled(false);
            idjenis.requestFocus();
            btntambah.setEnabled(false);
            btntambah.setText("Tambah");
            btnsimpan.setEnabled(true);
            btnhapus.setEnabled(false);
            btnedit.setEnabled(true);
            btnkeluar.setEnabled(false);
            Cari.setEnabled(false);
        }else{
            btnedit.setText("Edit");
            Bersih();
            SiapIsi(false);
            tombolAwal();
            Cari.setEnabled(true);
        }
    }//GEN-LAST:event_btneditActionPerformed

    private void btnhapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhapusActionPerformed
        // TODO add your handling code here:
      ek.setId_jenis(idjenis.getText());

        int pesan = JOptionPane.showConfirmDialog(null, "Apakah Anda Yakin Ingin Menghapus Data Ini ??", "Konfirmasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(pesan == JOptionPane.YES_OPTION){
            if(km.hapus(ek)==1){
                JOptionPane.showMessageDialog(null, "Hapus Data Berhasil");
                 Bersih();
                  SiapIsi(false);
                btntambah.setText("Tambah");
                 tombolAwal();
                 tampil();
                 buatkode();
            }else{
                JOptionPane.showMessageDialog(null, "Hapus Data Gagal !!");
            }
        }
    }//GEN-LAST:event_btnhapusActionPerformed

    private void btnkeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnkeluarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnkeluarActionPerformed

    private void CariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CariKeyReleased
        // TODO add your handling code here:
        String find = null;
        find = Cari.getText();
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        listKls.clear();
        listKls=km.cari(find);
        for (int i = 0; i < listKls.size(); i++) {
            Object[] a=new Object[2];
            a[0]=listKls.get(i).getId_jenis();
            a[1]=listKls.get(i).getNama_jenis();
            model.addRow(a);
    }                                
    }//GEN-LAST:event_CariKeyReleased

    private void tabeljenisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabeljenisMouseClicked
        // TODO add your handling code here:
 int baris = tabeljenis.getSelectedRow();
        idjenis.setText(tabeljenis.getModel().getValueAt(baris,0).toString());
        namajenis.setText(tabeljenis.getModel().getValueAt(baris, 1).toString());
        SiapIsi(false);
        btnsimpan.setEnabled(false);
        btntambah.setEnabled(true);
        btntambah.setText("Batal");
        btnhapus.setEnabled(true);
        btnedit.setEnabled(true);
    }//GEN-LAST:event_tabeljenisMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(master_Jenis_kue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(master_Jenis_kue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(master_Jenis_kue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(master_Jenis_kue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new master_Jenis_kue().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(master_Jenis_kue.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Cari;
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnhapus;
    private javax.swing.JButton btnkeluar;
    private javax.swing.JButton btnsimpan;
    private javax.swing.JButton btntambah;
    private javax.swing.JTextField idjenis;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField namajenis;
    private javax.swing.JTable tabeljenis;
    // End of variables declaration//GEN-END:variables
  private void tombolAwal(){
        btntambah.setEnabled(true);
        btnsimpan.setEnabled(false);
        btnedit.setEnabled(false);
        btnhapus.setEnabled(false);
        btnkeluar.setEnabled(true);
   //     kodepetugas.setEnabled(true);
    }
    
    private void Bersih(){
         //kodekelas.setText(null);
         namajenis.setText(null);
    }
   private void SiapIsi(boolean a){
       //kodekelas.setEnabled(a);
       namajenis.setEnabled(a);
    }
   
     private void BuatTabel(){
        model=new DefaultTableModel();
        model.addColumn("Kode Jenis");
        model.addColumn("Nama Jenis Kue");  
        tabeljenis.setModel(model);
    }
     
     private void buatkode(){
                  try {
    
String sql = "SELECT * FROM jenis_kue ORDER BY id_jenis DESC";


rs=st.executeQuery(sql);
if (rs.next()) {
String kd_barang = rs.getString("id_jenis").substring(2);
String AN = "" +(Integer.parseInt(kd_barang) + 1);
String Nol = "";
if(AN.length()==1)
{Nol = "00";}
else if(AN.length()==2)
{Nol = "0";}
else if(AN.length()==3)
{Nol = "";}
idjenis.setText("J-"+ Nol +AN);
} else {
idjenis.setText("J-001");
}
} catch (Exception e) {
e.printStackTrace();
    
}
       }
      private void tampil(){
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        listKls.clear();
        listKls=km.tampil();
        for (int i = 0; i < listKls.size(); i++) {
            Object[] a=new Object[2];
            a[0]=listKls.get(i).getId_jenis();
            a[1]=listKls.get(i).getNama_jenis();
            model.addRow(a);
        }
    }}
